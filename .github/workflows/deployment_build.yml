name: Development Deployment
on:
  push:
    branches: [ "master" ]

jobs:
  phpcs:
    name: PHP CodeSniffer
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP Codesniffer
        run: composer run-script phpcs

  phplint:
    name: PHP Lint
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP Linter
        run: composer run-script phplint

  phpstan:
    name: PHP Stan
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP Stan
        run: composer run-script phpstan

  phpunit:
    name: PHP Unit
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP Unit Test
        run: composer run-script test

  deployment_of_hackathon_to_build:
    name: Deploy Build
    needs:
      - phpcs
      - phplint
      - phpstan
      - phpunit
    env:
      VUE_APP_API_BASE_URL: 'https://build.hackathon.exdrals.de'
    runs-on: ubuntu-20.04
    steps:
      - name: Get latest code
        uses: actions/checkout@v2

      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-progress --no-dev

      - name: Run create openapi Data
        run: composer run-script openapi

      - name: FTP Deploy to Development Server (Staging)
        uses: SamKirkland/FTP-Deploy-Action@4.3.2
        with:
          server: ${{ secrets.BUILD_HOST }}
          username: ${{ secrets.BUILD_USER }}
          password: ${{ secrets.BUILD_PASSWORD }}
          state-name: ".ftp-deploy-sync-state-backend.json"
          exclude: |
            **/.git*
            **/*.dist
            **/*.dist/**
            **/.git*/**
            **/bin/**
            **/tests/**
            **/config/autoload/**
            **/config/migrations/**
            **/node_modules/**
            **/client/**
            **/database/**
            **/scripts/**
            **/tests/**
            **/docker/**
            **/public/assets/**
            **/public/index.html
            **/*.md
            **/*.xml
            **/*.neon
            **/composer.json
            **/*.yml
            **/*.lock
            **/LICENSE
