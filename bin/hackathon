#!/usr/bin/bash
export APP_ENV=${APP_ENV:-develope}

function composer_install() {
    docker-compose exec php composer install
}

function setup_database() {
    docker-compose exec --env APP_ENV php composer run doctrine migrations:sync-metadata-storage
    docker-compose exec --env APP_ENV php composer run doctrine migrations:migrate --no-interaction
}

function docker_start() {
    docker-compose up -d
}

function docker_down() {
    docker-compose down
}

function docker_database_cleanup() {
    docker volume rm hackathon-api_db
}

function docker_vendor_cleanup() {
    rm -rf "./vendor"
}

function docker_cleanup() {
    docker image rm ghcr.io/ownhackathon/hackathon-api-php:latest mariadb:latest mailhog/mailhog httpd:alpine
    docker_database_cleanup
    docker_vendor_cleanup
}

case $1 in
  "start")
    docker_start
    ;;

  "restart")
    docker-compose restart
    ;;

  "stop")
    docker_down
    ;;

  "setup")
    docker_start
    composer_install
    setup_database
  ;;

  "clean")
    docker_vendor_cleanup
  ;;

  "reset")
    echo "turning down docker container"
    docker_down

    case $2 in
      "all")
        echo "cleanup system completely"
        docker_cleanup
      ;;
      "vendor")
        echo "cleanup vendor folder"
        docker_vendor_cleanup
      ;;
      *)
        echo "cleanup database"
        docker_database_cleanup
        ;;
    esac

    echo "turning on docker container"
    docker_start

    echo "check and install vendor"
    composer_install

    echo "wait for services"
    sleep 5

    echo "create database storage information an run migrations"
    setup_database

    echo "done"
  ;;

  "composer")
    docker-compose run --rm --env APP_ENV php composer "${@:2}"
    ;;

  "php")
    docker-compose run --rm --env APP_ENV php "${@:2}"
    ;;
esac
